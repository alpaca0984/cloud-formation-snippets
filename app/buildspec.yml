# References:
#   - Docker Sample for CodeBuild
#     https://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html
#   - Environment Variables in Build Environments
#     https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html
#   - Create a Pipeline in CodePipeline
#     https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-create.html#pipelines-create-image-definitions
#   - Tutorial: Continuous Deployment with CodePipeline
#     https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-cd-pipeline.html

version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Move to working directory...
      - cd ${CODEBUILD_SRC_DIR}/app
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' cf-web $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
  base-directory: app
  discard-paths: yes
